ext {
    javaeePath = "javaee"
    earPath = "${javaeePath}/skyve.ear"
    warPath = "${earPath}/skyve.war"
}

sourceSets {
    main {
        java {
            srcDirs = ["src/skyve"]
            output.classesDir = "javaee/skyve.ear/apps.jar"
        }

        resources {
            srcDirs = ["src/skyve"]
            exclude "**/*.java"
            output.resourcesDir = "javaee/skyve.ear/apps.jar"
        }
    }
    test {
        java {
            srcDirs = ["src/test", "src/generatedTest"]
        }
    }
}

configurations {
    warLib {
        transitive = false
    }
    compileOnly.extendsFrom warLib
}

dependencies {
    runtime project(":skyve-core")
    runtime project(":skyve-ext")

    warLib project(":skyve-web")
    warLib "org.atmosphere:atmosphere-runtime:${atmosphereRuntimeVersion}"
    warLib "commons-fileupload:commons-fileupload:${commonsFileUploadVersion}"
    warLib "com.google.code.gson:gson:${gsonVersion}"
    warLib "org.primefaces:primefaces:${primefacesVersion}"
    warLib "org.primefaces.extensions:primefaces-extensions:${primefacesExtensionsVersion}"
    warLib "org.primefaces.themes:all-themes:${primefacesAllThemesVersion}"

    compile "commons-collections:commons-collections:${commonsCollectionsVersion}"
    compile "commons-validator:commons-validator:${commonsValidatorVersion}"
    compile "net.coobird:thumbnailator:${thumbnailatorVersion}"
    compile "net.sf.ehcache:ehcache-core:${ehcacheVersion}"
    compile "eu.bitwalker:UserAgentUtils:${userAgentUtilsVersion}"
    compile "org.elasticsearch:elasticsearch:${elasticsearchVersion}"
    compile "org.apache.tika:tika-core:${tikaVersion}"
    compile ("org.apache.tika:tika-parsers:${tikaVersion}") {
        exclude group: "org.ow2.asm", module: "asm-debug-all"
        exclude group: "edu.ucar", module: "netcdf"
    }
    compile "org.hibernate:hibernate-core:${hibernateVersion}"
    compile "org.hibernate:hibernate-entitymanager:${hibernateEntityManagerVersion}"
    compile "org.hibernate:hibernate-spatial:${hibernateSpatialVersion}"
    compile "cglib:cglib:${cglibVersion}"
    compile "org.ow2.asm:asm:${asmVersion}"
    compile ("org.ow2.asm:asm-commons:${asmVersion}") {
        exclude group: "org.ow2.asm", module: "asm-tree"
    }
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    compile ("net.sf.jasperreports:jasperreports:${jaserReportsVersion}") {
        exclude group: "org.springframework", module: "spring-context"
        exclude group: "bouncycastle", module: "bcmail-jdk14"
        exclude group: "bouncycastle", module: "bcprov-jdk14"
        exclude group: "xml-apis", module: "xml-apis"
        exclude group: "org.bouncycastle", module: "bctsp-jdk14"
        exclude group: "eclipse", module: "jdtcore"
        exclude group: "commons-beanutils", module: "commons-beanutils"
        exclude group: "commons-collections", module: "commons-collections"
        exclude group: "org.codehaus.castor", module: "castor-xml"
    }
    compile "org.bouncycastle:bcmail-jdk15:${bcmailJdk15Version}"
    compile "org.apache.lucene:lucene-analyzers-common:${luceneVersion}"
    compile "org.apache.lucene:lucene-core:${luceneVersion}"
    compile "org.apache.lucene:lucene-expressions:${luceneVersion}"
    compile "org.apache.lucene:lucene-grouping:${luceneVersion}"
    compile "org.apache.lucene:lucene-highlighter:${luceneVersion}"
    compile "org.apache.lucene:lucene-join:${luceneVersion}"
    compile "org.apache.lucene:lucene-memory:${luceneVersion}"
    compile "org.apache.lucene:lucene-misc:${luceneVersion}"
    compile "org.apache.lucene:lucene-queries:${luceneVersion}"
    compile "org.apache.lucene:lucene-queryparser:${luceneVersion}"
    compile ("org.apache.lucene:lucene-sandbox:${luceneVersion}") {
        exclude group: "jakarta-regexp", module: "jakarta-regexp"
    }
    compile "org.apache.lucene:lucene-spatial:${luceneVersion}"
    compile "org.apache.lucene:lucene-suggest:${luceneVersion}"
    compile "org.apache.poi:poi:${poiVersion}"
    compile "com.spatial4j:spatial4j:${spatial4jVersion}"
    compile ("xerces:xercesImpl:${xercesImplVersion}") {
        exclude group: "xml-apis", module: "xml-apis"
    }
    compile "org.apache.xmlbeans:xmlbeans:${xmlBeansVersion}"
    compile "org.apache.ws.xmlschema:xmlschema-core:${xmlschemaCoreVersion}"
    compile "com.vividsolutions:jts:${jtsVersion}"
    compile "org.quartz-scheduler:quartz:${quartzVersion}"
    compile "org.apache.deltaspike.core:deltaspike-core-api:${deltaspikeCoreVersion}"

    runtime "org.slf4j:slf4j-log4j12:1.5.6"
    runtime "org.apache.james:apache-mime4j-core:0.7.2"
    runtime "org.apache.james:apache-mime4j-dom:0.7.2"
    runtime "org.aspectj:aspectjrt:1.6.11"
    runtime "de.l3s.boilerpipe:boilerpipe:1.1.0"
    runtime "org.dspace.xmlui.concurrent:concurrent:1.3.4"
    runtime "org.apache.pdfbox:fontbox:${pdfBoxVersion}"
    runtime "org.opengeo:geodb:${geodbVersion}"
    runtime "net.sourceforge.hatbox:hatbox:1.0.b7"
    runtime "com.googlecode.mp4parser:isoparser:1.0-RC-1"
    runtime "jdom:jdom:1.0"
    runtime ("com.uwyn:jhighlight:1.0") {
        exclude group: "javax.servlet", module: "servlet-api"
    }
    runtime "net.java.dev.jna:jna:4.1.0"
    runtime "com.googlecode.juniversalchardet:juniversalchardet:1.0.3"
    runtime "net.sourceforge.jexcelapi:jxl:2.6.10"
    runtime "net.sf.supercsv:super-csv:2.4.0"
    runtime "com.drewnoakes:metadata-extractor:2.6.2"
    runtime ("org.apache.neethi:neethi:3.0.1") {
        exclude group: "org.codehaus.woodstox", module: "woodstox-core-asl"
    }
    runtime "net.sourceforge.nekohtml:nekohtml:1.9.7"
    runtime "org.apache.pdfbox:pdfbox:${pdfBoxVersion}"
    runtime "org.apache.poi:poi-ooxml:${poiVersion}"
    runtime "org.apache.poi:poi-ooxml-schemas:${poiVersion}"
    runtime "org.apache.poi:poi-scratchpad:${poiVersion}"
    runtime "net.sf.qualitycheck:quality-check:1.3"
    runtime "rome:rome:0.9"
    runtime "org.ccil.cowan.tagsoup:tagsoup:1.2.1"
    runtime "org.gagravarr:vorbis-java-core:0.1"
    runtime "org.gagravarr:vorbis-java-tika:0.1"
    runtime "wsdl4j:wsdl4j:1.6.2"
    runtime "org.tukaani:xz:1.2"
    runtime "com.h2database:h2:${h2Version}"

    compileOnly ("javax:javaee-api:${javaeeApiVersion}") {
        exclude group: "com.sun.mail", module: "javax.mail"
        exclude group: "javax.activation", module: "activation"
    }

    // Assertions are being used in src main
    compileOnly "junit:junit:${junitVersion}"

    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.hamcrest:hamcrest-library:${hamcrestVersion}"
    testCompile "org.jboss.weld.se:weld-se:${weldSeVersion}"
}

task clearAllDependencies(type: Delete) {
    delete "$earPath/lib"
    delete "$warPath/WEB-INF/lib"
}
clean.dependsOn clearAllDependencies

task copyEarLibDependencies(type: Copy) {
    into "$earPath/lib/"
    from configurations.runtime
}
build.dependsOn copyEarLibDependencies

task copyWarLibDependencies(type: Copy) {
    into "$warPath/WEB-INF/lib/"
    from configurations.warLib
}
build.dependsOn copyWarLibDependencies

task touch {
    doLast {
        delete fileTree(javaeePath) {
            include '**/*.failed'
        }
        ant.touch(file: "${earPath}.dodeploy")
    }
}

task generateDomain(type: JavaExec) {
    classpath = fileTree(dir: 'javaee/lib', include: '**/*.jar') + sourceSets.main.runtimeClasspath

    main = 'org.skyve.impl.generate.DomainGenerator'

    // arguments to pass to the application
    args = ["src/skyve/", "src/test/", "src/generatedTest/", "true", "true", "false", "0", "test,whosin,whosinintegrate"]
}