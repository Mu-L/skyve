<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping default-access="field">

	<typedef name="OptimisticLock" class="org.skyve.impl.domain.types.OptimisticLockUserType" />
	<typedef name="Decimal2" class="org.skyve.impl.domain.types.Decimal2UserType" />
	<typedef name="Decimal5" class="org.skyve.impl.domain.types.Decimal5UserType" />
	<typedef name="Decimal10" class="org.skyve.impl.domain.types.Decimal10UserType" />
	<typedef name="DateOnly" class="org.skyve.impl.domain.types.DateOnlyUserType" />
	<typedef name="DateTime" class="org.skyve.impl.domain.types.DateTimeUserType" />
	<typedef name="TimeOnly" class="org.skyve.impl.domain.types.TimeOnlyUserType" />
	<typedef name="Timestamp" class="org.skyve.impl.domain.types.TimestampUserType" />
	<typedef name="Enum" class="org.skyve.impl.domain.types.EnumUserType" />
	<class name="modules.whosin.domain.Office" table="WHO_Office" entity-name="whosinOffice">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" index="IDX_bizKey" not-null="true" />
		<property name="bizCustomer" length="50" index="IDX_bizCustomer" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" index="IDX_bizUserId" not-null="true" />
		<property name="levelUnit" length="200" />
		<property name="buildingName" length="200" />
		<property name="streetAddress" length="200" />
		<property name="suburb" length="200" />
		<property name="postCode" length="4" />
		<property name="phone" length="14" />
		<property name="boundary" />
		<property name="demoData" />
		<filter name="whosinOfficeNoneFilter" condition="1=0"/>
		<filter name="whosinOfficeCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="whosinOfficeDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="whosinOfficeUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<class name="modules.whosin.domain.Position" table="WHO_Position" entity-name="whosinPosition">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" index="IDX_bizKey" not-null="true" />
		<property name="bizCustomer" length="50" index="IDX_bizCustomer" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" index="IDX_bizUserId" not-null="true" />
		<property name="bizParentId" length="36" index="IDX_bizParentId" />
		<property name="positionTitle" length="200" />
		<many-to-one name="staff" entity-name="whosinStaff" column="staff_id" cascade="persist,save-update,refresh,merge" index="IDX_staff" foreign-key="FK_WHO_Position_staff" />
		<property name="demoData" />
		<filter name="whosinPositionNoneFilter" condition="1=0"/>
		<filter name="whosinPositionCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="whosinPositionDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="whosinPositionUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<class name="modules.whosin.domain.Staff" table="WHO_Staff" entity-name="whosinStaff">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" index="IDX_bizKey" not-null="true" />
		<property name="bizCustomer" length="50" index="IDX_bizCustomer" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" index="IDX_bizUserId" not-null="true" />
		<many-to-one name="contact" entity-name="adminContact" column="contact_id" cascade="persist,save-update,refresh,merge" index="IDX_contact" foreign-key="FK_WHO_Staff_contact" />
		<property name="staffCode" length="50" />
		<property name="dateOfBirth" type="DateOnly" />
		<property name="roleTitle" length="200" />
		<many-to-one name="baseOffice" entity-name="whosinOffice" column="baseOffice_id" cascade="persist,save-update,refresh,merge" index="IDX_baseOffice" foreign-key="FK_WHO_Staff_baseOffice" />
		<property name="location" />
		<property name="status" length="9">
			<type name="Enum">
				<param name="enumClass">modules.whosin.domain.Staff$Status</param>
			</type>
		</property>
		<property name="dueBack" type="DateTime" />
		<property name="demoData" />
		<one-to-one name="position" entity-name="whosinPosition" property-ref="staff" />
		<filter name="whosinStaffNoneFilter" condition="1=0"/>
		<filter name="whosinStaffCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="whosinStaffDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="whosinStaffUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<filter-def name="whosinOfficeNoneFilter" />
	<filter-def name="whosinOfficeCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="whosinOfficeDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="whosinOfficeUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="whosinPositionNoneFilter" />
	<filter-def name="whosinPositionCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="whosinPositionDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="whosinPositionUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="whosinStaffNoneFilter" />
	<filter-def name="whosinStaffCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="whosinStaffDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="whosinStaffUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
</hibernate-mapping>