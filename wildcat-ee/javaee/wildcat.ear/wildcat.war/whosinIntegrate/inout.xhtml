<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
    	xmlns:ui="http://java.sun.com/jsf/facelets"
		xmlns:f="http://java.sun.com/jsf/core"
		xmlns:h="http://java.sun.com/jsf/html"
		xmlns:p="http://primefaces.org/ui"
		xmlns:pm="http://primefaces.org/mobile"
		xmlns:w="http://bizhub.com.au/ui"
		xmlns:pe="http://primefaces.org/ui/extensions"
		xmlns:pt="http://xmlns.jcp.org/jsf/passthrough">
    <f:view renderKitId="PRIMEFACES_MOBILE">
		<f:metadata>
			<f:viewParam name="i" value="#{inOutView.bizIdParameter}" />
			<f:event type="preRenderView" listener="#{inOutView.preRender}"/>
		</f:metadata>
		<w:conversation managedBean="inOutView" />
		<ui:composition template="../phone/template.xhtml">
			<ui:param name="baseHref" value="#{inOutView.baseHref}" />
			<ui:param name="wildcatVersionComment" value="#{inOutView.wildcatVersionComment}" />
			<ui:define name="head">
				<script type="text/javascript" src="#{inOutView.baseHref}whosinIntegrate/jquery.panzoom.min.js"></script>
				<script type="text/javascript" src="#{inOutView.baseHref}whosinIntegrate/jquery.mousewheel.js"></script>
				<script type="text/javascript" src="#{inOutView.baseHref}whosinIntegrate/load-image.min.js"></script>
			</ui:define>
			<ui:define name="pages">
				<pm:page id="inout">
					<pm:header title="In/Out" fixed="true">
						<p:button value="Home" 
									styleClass="ui-btn-left ui-btn-inline" 
									icon="ui-icon-home" 
									href="/"
									rendered="#{inOutView.uxUi eq 'phone'}" />
						<p:button value="Logout" 
									styleClass="ui-btn-right ui-btn-inline"
									icon="ui-icon-gear"
									href="/loggedOut"
									rendered="#{inOutView.uxUi eq 'phone'}" />
					</pm:header>
					<pm:content>
						<h:form id="inoutForm">
							<h2 style="text-align:center">#{inOutView.currentBean['bizKey']}</h2>
							<w:view module="whosinIntegrate"
										document="Office"
										managedBean="inOutView"
										type="phone" 
										rendered="#{inOutView.uxUi eq 'phone'}" />
							<p:dataList id="inoutList"
											value="#{inOutView.staff}"
											var="member"
											pt:data-inset="true">
								<f:facet name="header">
									Staff
								</f:facet>
								<p:column>
									<p:commandLink action="pm:staff" update=":staff:staffForm">		
								        <p:graphicImage value="#{empty member.contact.image ?
																'/whosinIntegrate/UnknownContact.gif' :								        						
								        						'/content?_n='.concat(member.contact.image).concat('&amp;_doc=admin.Contact&amp;_b=image')}"
								        					style="width:100px;height:100px;float:left"
								        					cache="#{inOutView.shouldCacheImage(member.contact.image)}" />
										<h:outputText value="#{member.contact.name}" />
										<h:outputText value="#{member.getStatus().toDescription()}" style="float:right"/>
										<f:setPropertyActionListener value="#{member}" target="#{inOutView.selectedStaff}" />
									</p:commandLink>
								</p:column>
							</p:dataList>
						</h:form>
					</pm:content>
				</pm:page>
				<pm:page id="staff">
					<pm:header id="staffHeader" title="In/Out" fixed="true">
						<p:button value="Home"
									styleClass="ui-btn-left ui-btn-inline"
									icon="ui-icon-home"
									href="/"
									rendered="#{inOutView.uxUi eq 'phone'}" />
						<p:button value="Logout"
									styleClass="ui-btn-right ui-btn-inline"
									icon="ui-icon-gear"
									href="/loggedOut"
									rendered="#{inOutView.uxUi eq 'phone'}" />
					</pm:header>
					<pm:content>
						<h:form id="staffForm">
							<!-- This needs to be in here each time to get re-rendered when the mobile page is shown, not in head -->
							<script type="text/javascript">
							    geoLocate = function() {
							    	$(function(){PrimeFaces.cw("Growl","growl",{id:"growl",widgetVar:"growl",msgs:[{summary:'GeoLocating', detail: 'Please wait...', severity: 'info'}]});});
					                navigator.geolocation.getCurrentPosition(
					                    function(position) {
					                    	$(PrimeFaces.escapeClientId('staff:staffForm:location')).val(
												'POINT (' + position.coords.longitude + ' ' + position.coords.latitude + ')'
					                    	);
					    			    	$(function(){PrimeFaces.cw("Growl","growl",{id:"growl",widgetVar:"growl",msgs:[{summary:'GeoLocating', detail: 'Done', severity: 'info'}]});});
					                    },
					                    function(error) {
					    			    	$(function(){PrimeFaces.cw("Growl","growl",{id:"growl",widgetVar:"growl",msgs:[{summary:'GeoLocating', detail: error.message, severity: 'warn'}]});});
					                    },
					                    {
					                       enableHighAccuracy: true
					                    });
					            };
				
					            function setupCropping(input) {
					                if (input.files &amp;&amp; input.files[0]) {
										var file = input.files[0];
					                	var options = {canvas: true};

					                    loadImage.parseMetaData(file, function(data) {
					                        if (data.exif) {
					                            options.orientation = data.exif.get('Orientation');
					                        }
					                        
					                        if (! loadImage(file, 
							                        			function(img) {
										                            if (! (img.src || img instanceof HTMLCanvasElement)) {
										                                alert('Loading image file failed');
										                            }
										                            else {
												                    	$(PrimeFaces.escapeClientId('staff:staffForm:photo')).attr('src', img.src || img.toDataURL());
																		setZoomPan();
										                            }
										                        },
							                        			options)) {
				                                alert('Your browser does not support the URL or FileReader API.');
					                        }
					                    });
					                }
					            }

					            function setZoomPan() {
									var $panzoom = $(PrimeFaces.escapeClientId('staff:staffForm:photo'));
									if ($panzoom.panzoom) {
										$panzoom.panzoom('destroy');
									}
						            var viewportWidth = $panzoom.parent().width(); // viewport width
						            var viewportHeight = $panzoom.parent().height(); // viewport height
									var zoomFactor = Math.max(viewportWidth / $panzoom.width(),
																viewportHeight / $panzoom.height()); // fill the selfie are
									$panzoom.panzoom({
										minScale: zoomFactor,
										contain: 'invert'
									});
									$panzoom.on('panzoomend', function(e, panzoom, matrix, changed) {
										if (changed) {
											var $this = $(this);
											getDataUrl($this, 
														matrix,
														$this.parent().width(), // viewport width
														$this.parent().height()); // viewport height
										}
									});
									$panzoom.parent().on('mousewheel.focal', function(evt) {
								        evt.preventDefault();
								        var delta = evt.delta || evt.originalEvent.wheelDelta;
								        var zoomOut = delta ? delta &lt; 0 : evt.originalEvent.deltaY &gt; 0;
								        $panzoom.panzoom('zoom', zoomOut, {
											increment: 0.1,
											animate: false,
											focal: evt
								        });
									});
									
									$panzoom.panzoom('zoom', zoomFactor);
									getDataUrl($panzoom,
												[zoomFactor, 0, 0, zoomFactor, 0, 0],
												viewportWidth,
												viewportHeight); // set the url to start with
								}

								function getDataUrl($panzoom, matrix, viewportWidth, viewportHeight) {
									var canvas = document.createElement('canvas'), context = canvas.getContext('2d');
									canvas.width = viewportWidth;
									canvas.height = viewportHeight;
								
									var position = $panzoom.position();
									context.drawImage($panzoom.get(0),
														- position.left * 1 / matrix[0],
														- position.top * 1 / matrix[3],
														1 / matrix[0] * viewportWidth,
														1 / matrix[3] * viewportHeight,
														0, 0, viewportWidth, viewportHeight);
									$(PrimeFaces.escapeClientId('staff:staffForm:base64Image')).val(canvas.toDataURL());
								}

								$(function() {
									$('#PhotoButton').click(function() {
										$('#PhotoPicker').trigger('click');
											return false;
										});
							        $('#PhotoPicker').on('change', function(e) {
							            e.preventDefault();
							            if(this.files.length === 0) return;
										setupCropping(this);
							        });
					            });
							</script>

							<h2 style="text-align:center">#{inOutView.selectedStaff.bizKey}</h2>

							<p:commandButton value="OK" 
												icon="ui-icon-check"
												action="#{inOutView.saveSelectedStaff}" 
												update=":inout:inoutForm:inoutList" />

							<!-- Place file upload in a div size 0 with no overflow -->
							<div style="width: 0; height: 0; overflow: hidden;">
								<input id="PhotoPicker" type="file" accept="image/*" pt:capture="camera" />
							</div>
							<button id="PhotoButton"
										class="ui-btn ui-shadow ui-corner-all ui-btn-icon-left ui-icon-camera"
										style="visibility: #{(inOutView.uxUi eq 'phone') ? 'visible' : 'hidden'}">
								Photo
							</button>
							<div id="focal" style="width:100%;text-align:center">
								<div style="width:250px;height:250px;display:inline-block">
									<p:graphicImage id="photo" value="#{empty inOutView.selectedStaff.contact.image ? 
																		'/whosinIntegrate/UnknownContact.gif' :
																		'/content?_n='.concat(inOutView.selectedStaff.contact.image).concat('&amp;_doc=admin.Contact&amp;_b=image')}"
																		cache="false"  />
								</div>
							</div>
							<h:inputHidden id="base64Image" value="#{inOutView.base64Image}" />
							<pm:field>
							    <p:outputLabel for="status" value="Status:" />
								<p:selectOneRadio id="status" value="#{inOutView.selectedStaff.status}" converter="SelectItemsBean">
									<f:selectItem itemLabel="In the Office" itemValue="inTheOffice" />
									<f:selectItem itemLabel="Out of the Office" itemValue="outOfTheOffice" />
									<f:selectItem itemLabel="On Leave" itemValue="onLeave" />
									<f:selectItem itemLabel="At Lunch" itemValue="atLunch" />
								</p:selectOneRadio>
							</pm:field>
							<h:inputHidden id="location" value="#{inOutView.selectedStaff.location}" converter="Geometry" />
							<button class="ui-btn ui-shadow ui-corner-all ui-btn-icon-left ui-icon-navigation"
										style="visibility: #{(inOutView.uxUi eq 'phone') ? 'visible' : 'hidden'}"
										onclick="geoLocate(); return false">
								Set Current Location
							</button>
						</h:form>
					</pm:content>
				</pm:page>
			</ui:define>
		</ui:composition>
	</f:view>
</html>
